---
import Layout from "../layouts/Layout.astro";
import { colors } from "../colors1.astro";
---

<Layout title="Welcome to Astro.">
    <main>
        <input type="text" id="inputField" />
        <div id="color"></div>
    </main>
</Layout>

<style></style>

<script define:vars={{ colors }}>
    const dif = (col1, col2) => {
        const r = col1.r - col2.r;
        const g = col1.g - col2.g;
        const b = col1.b - col2.b;
        return Math.sqrt(r * r + g * g + b * b);
    };
    const angle = (color1, color2) => {
        const dotProduct =
            color1.r * color2.r + color1.g * color2.g + color1.b * color2.b;
        const magnitude1 = Math.sqrt(
            color1.r * color1.r + color1.g * color1.g + color1.b * color1.b
        );
        const magnitude2 = Math.sqrt(
            color2.r * color2.r + color2.g * color2.g + color2.b * color2.b
        );
        const cosTheta = dotProduct / (magnitude1 * magnitude2);
        return Math.acos(cosTheta) * (180 / Math.PI);
    };
    const splitColor = (color) => {
        if (typeof color !== "string") {
            console.log("failedcolor: ", color);
            throw new Error("Expected a string");
        }
        const r = parseInt(color.slice(1, 3), 16);
        const g = parseInt(color.slice(3, 5), 16);
        const b = parseInt(color.slice(5, 7), 16);
        return { r, g, b };
    };

    const handleKeyDown = (event) => {
        if (event.key === "Enter") {
            const input = document.getElementById("inputField");
            const color = input.value;
            const colorBox = document.createElement("div");
            colorBox.style.width = "50px";
            colorBox.style.height = "50px";
            colorBox.style.backgroundColor = color;
            document.getElementById("color").appendChild(colorBox);
            console.log("color: ", color);
            console.log("typecolor: ", typeof color);
            const colorObj = splitColor(color);
            const colorDetails = [];
            for (const theme in colors) {
                const difColor = splitColor(colors[theme]);
                const difValue = dif(colorObj, difColor);
                const angleValue = angle(colorObj, difColor);
                colorDetails.push({
                    color: theme,
                    dif: difValue,
                    angle: angleValue,
                });
            }
            // Sort the array by difference
            const minColors = colorDetails
                .sort((a, b) => a.dif - b.dif)
                .slice(0, 5);
            for (const color of minColors) {
                const div = document.createElement("div");
                const colorBox = document.createElement("div");
                colorBox.style.width = "50px";
                colorBox.style.height = "50px";
                colorBox.style.backgroundColor = colors[color.color];
                div.innerText =
                    color.color + " " + color.dif + " " + color.angle;
                div.appendChild(colorBox);
                div.style.color = "white";
                document.getElementById("color").appendChild(div);
            }
            // console.log("colorDetails: ", colorDetails);
        }
    };
    document
        .getElementById("inputField")
        .addEventListener("keydown", handleKeyDown);
</script>
